package main

var newMap = map[string]([2]string){
	// Overview
	"Num_of_Doris_Clusters": [2]string{
		"Num of Doris Clusters",
		"Doris 集群数量",
	},
	"The_JVM_heap_usage_percent_of_each_Frontend_of_each_Doris_cluster": [2]string{
		"The JVM heap usage percent of each Frontend of each Doris cluster",
		"每个 Doris 集群的每个前端的 JVM 堆使用率百分比",
	},
	"The_Backend_CPU_idle_overview_of_each_Doris_cluster": [2]string{
		"The Backend CPU idle overview of each Doris cluster",
		"每个 Doris 群集的后端 CPU 空闲概述",
	},
	"The_Backend_memory_usage_overview_of_each_Doris_cluster": [2]string{
		"The Backend memory usage overview of each Doris cluster",
		"每个 Doris 群集的后端内存使用情况概述",
	},
	"QPS_statistic_group_by_cluster": [2]string{
		"QPS statistic group by cluster",
		"按群集分组的 QPS 统计",
	},
	// Cluster Overview
	"Total_Frontends_node_number": [2]string{
		"Total Frontends node number",
		"前端节点总数",
	},
	"Total_alive_number_of_Frontends": [2]string{
		"Total alive number of Frontends",
		"正常工作的前端总数",
	},
	"Total_Backends_node_number": [2]string{
		"Total Backends node number",
		"后端节点总数",
	},
	"Total_alive_number_of_Backends": [2]string{
		"Total alive number of Backends",
		"正常工作的后端总数",
	},
	"Total_used_disk_capacity_of_all_Backends": [2]string{
		"Total used disk capacity of all Backends",
		"所有后端的已用磁盘总容量",
	},
	"Total_disk_capacity_of_all_Backends": [2]string{
		"Total disk capacity of all Backends",
		"所有后端的总磁盘容量",
	},
	"The_max_replayed_meta_data_journal_id_on_Frontends": [2]string{
		"The max replayed meta data journal id on Frontends",
		"前端上重放的最大元数据日志 ID",
	},
	"The_counter_of_meta_data_image_generation_on_Master_Frontend": [2]string{
		"The counter of meta data image generation on Master Frontend",
		"主前端上元数据镜像生成的数量",
	},
	"The_left_Y_axes_shows_write_latency_of_99th_The_right_Y_axes_shows_the_write_per_seconds_of_journal": [2]string{
		"Write latency of 99th. The write per seconds of journal",
		"99 分位写入延迟，日志的每秒写入次数",
	},
	"The_left_Y_axes_shows_the_read_per_seconds_of_journal": [2]string{
		"The read per seconds of journal",
		"日志的每秒读取量",
	},
	"The_edit_log_size_for_each_FE": [2]string{
		"The edit log size for each FE",
		"每个前端的日志大小",
	},
	"The_edit_log_clean_of_each_FE": [2]string{
		"The edit log clean of each FE",
		"每个前端被清理的日志大小",
	},
	"The_FE_collect_compaction_score_of_each_BE": [2]string{
		"The FE collect compaction score of each BE",
		"前端收集每个后端的压缩比例",
	},
	"The_compaction_score_of_each_BE": [2]string{
		"The compaction score of each BE",
		"每个后端的压缩比例",
	},
	"The_image_Write_of_each_FE": [2]string{
		"The image Write of each FE",
		"每个前端镜像写入数量",
	},
	"The_image_Push_of_each_FE": [2]string{
		"The image push of each FE",
		"每个前端镜像推送数量",
	},
	"The_image_clean_of_each_FE": [2]string{
		"The image clean of each FE",
		"每个前端镜像清除数量",
	},
	"Number_of_tablets_begin_scheduled": [2]string{
		"Number of tablets begin scheduled",
		"开始预定的表单数量",
	},
	"The_max_IO_util_of_each_Backend": [2]string{
		"The max IO util of each Backend",
		"每个后端的最大 IO 利用率",
	},
	// Query Statistic
	"Requests_per_seconds_on_each_Frontends": [2]string{
		"Requests per seconds on each Frontends",
		"每个前端上每秒请求数",
	},
	"Queries_per_seconds_on_each_Frontends": [2]string{
		"Queries per seconds on each Frontends",
		"每个前端每秒查询数",
	},
	"quantiles_of_query_latency_on_each_Frontends": [2]string{
		"99 quantiles of query latency on each Frontends",
		"每个前端上的查询延迟 99 分位数",
	},
	"Left_Y_axes_indicates_95_to_99_quantiles_of_query_latency_on_each_Frontends_Right_Y_axes_indicates_the_query_rate_per_1_min": [2]string{
		"95 to 99 quantiles of query latency on each Frontends. The query rate per 1 min",
		"每个前端上的查询延迟的 95 到 99 分位数，每1分钟的查询速率",
	},
	"Left_Y_axes_indicates_the_accumulated_error_queries_number_Right_Y_axes_indicates_the_error_query_rate_per_1_min": [2]string{
		"The accumulated error queries number. The error query rate per 1 min. Normally. the error query rate should be 0",
		"累积错误查询数，每1分钟的错误查询率，正常情况下错误查询率应为0",
	},
	"The_connections_number_to_each_Frontends": [2]string{
		"The connections number to each Frontends",
		"每个前端的连接数",
	},
	// Jobs
	"Statistic_of_Broker_load_jobs_num_in_each_Load_State": [2]string{
		"Statistic of Broker load jobs num in each Load State",
		"每个加载状态下 Broker 加载作业数量的统计信息",
	},
	"Statistic_of_load_jobs_num_in_each_Load_State_which_is_generated_by_Insert_Stmt": [2]string{
		"Statistic of load jobs num in each Load State which is generated by Insert Stmt",
		"Insert Stmt生成的每个加载状态下的加载作业数量统计",
	},
	"Statistic_of_Routine_load_jobs_num_in_each_Load_State": [2]string{
		"Statistic of Routine load jobs num in each Load State",
		"每个加载状态下的常规加载作业数统计",
	},
	"Statistic_of_Spark_load_jobs_num_in_each_Load_State": [2]string{
		"Statistic of Spark load jobs num in each Load State",
		"每个负载状态下的 Spark 负载作业数统计",
	},
	"The_trend_report_of_broker_load_job": [2]string{
		"The trend report of broker load job",
		"broker load 报告",
	},
	"The_trend_report_of_insert_load_job": [2]string{
		"The trend report of insert load job",
		"插入业务趋势报告",
	},
	"The_trend_report_of_routine_load_job": [2]string{
		"The trend report of routine load job",
		"常规业务趋势报告",
	},
	"The_trend_report_of_spark_load_job": [2]string{
		"The trend report of spark load job",
		"spark 业务趋势报告",
	},
	"Number_of_running_schema_change_jobs": [2]string{
		"Number of running schema change jobs",
		"正在运行的架构更改作业数",
	},
	"Number_of_running_rollup_jobs": [2]string{
		"Number of running rollup jobs",
		"正在运行的汇总作业数",
	},
	"Queue_size_of_report_in_Master_FE": [2]string{
		"Queue size of report in Master FE",
		"主前端服务器中报告的队列大小",
	},
	// Transaction
	"Show_the_number_and_rate_of_txn_begin_and_success": [2]string{
		"Show the number and rate of txn begin and success",
		"显示事务开始次数和成功率",
	},
	"Show_the_failed_txn_request_Including_rejected_request_and_failed_txn": [2]string{
		"Show the failed txn request Including rejected request and failed txn",
		"显示失败的事务请求 包括拒绝的请求和失败的事务",
	},
	"The_number_of_total_publish_task_request_and_error_rate": [2]string{
		"The number of total publish task request and error rate",
		"发布任务请求总数和错误率",
	},
	"Show_the_txn_rstatus_on_FE": [2]string{
		"Show the txn status on FE",
		"在前端上的事务状态",
	},
	"Left_Y_axes_indicates_the_total_received_bytes_rate_of_txn_Right_Y_axes_indicates_the_loaded_rows_rate_of_txn": [2]string{
		"The total received bytes rate of txn. The loaded rows rate of txn",
		"事务的总接收字节速率，事务的加载行速率",
	},
	// FE JVM
	"JVM_Heap_usage_of_specified_Frontend_Left_Y_Axes_shows_the_used_max_heap_size_Right_Y_Axes_shows_the_used_percentage": [2]string{
		"JVM Heap usage of specified Frontend. The used divided by max heap size. The used percentage",
		"指定前端的 JVM 堆使用情况，已使用除以最大堆大小，使用百分比",
	},
	"JVM_Non_Heap_usage_of_specified_Frontend._Left_Y_Axes_shows_the_used_committed_non_heap_size": [2]string{
		"JVM Non Heap usage of specified Frontend. The used divided by committed non heap size",
		"指定前端的 JVM 非堆使用情况，已使用除以已提交的非堆大小",
	},
	"JVM_old_generation_usage_of_specified_Frontend_Left_Y_Axes_shows_the_used_max_old_generation_size_Right_Y_Axes_shows_the_used_percentage": [2]string{
		"JVM old generation usage of specified Frontend. The used divided by max old generation size. The used percentage",
		"指定前端的 JVM 旧代使用情况，已使用除以最大旧代大小，使用百分比",
	},
	"JVM_full_gc_stat_of_specified_Frontend_Left_Y_Axes_shows_times_of_full_gc_Right_Y_Axes_shows_the_time_cost_of_each_full_gc": [2]string{
		"JVM full gc stat of specified Frontend. Times of full gc. The time cost of each full gc",
		"指定前端的 JVM 完整 gc 状态，完整 gc 的次数，每个完整 gc 的耗时",
	},
	"JVM_young_generation_usage_of_specified_Frontend_Left_Y_Axes_shows_the_used_max_young_generation_size_Right_Y_Axes_shows_the_used_percentage": [2]string{
		"JVM young generation usage of specified Frontend. The used divided by max young generation size. The used percentage",
		"指定前端的 JVM 年轻一代使用情况，已使用除以最大年轻一代大小，使用百分比",
	},
	"JVM_young_gc_stat_of_specified_Frontend_Left_Y_Axes_shows_times_of_young_gc_Right_Y_Axes_shows_the_time_cost_of_each_young_gc": [2]string{
		"JVM young gc stat of specified Frontend. Times of young gc. The time cost of each young gc",
		"指定前端的 JVM 年轻 gc 状态，年轻 gc 的次数，每个年轻gc的耗时",
	},
	"Num_of_threads_of_FE_JVM": [2]string{
		"Num of threads of FE JVM",
		"前端 JVM 的线程数",
	},
	// BE
	"CPU_idle_stat_of_Backends_Low_means_CPU_is_busy": [2]string{
		"CPU idle stat of Backends. Low means CPU is busy",
		"后端的 CPU 空闲状态，低表示 CPU 繁忙",
	},
	"Memory_usage_of_Backends": [2]string{
		"Memory usage of Backends",
		"内存使用",
	},
	"Network_send_receive_bytes_rate_of_all_device": [2]string{
		"Network send divided by receive bytes rate of all device",
		"所有设备的网络发送除以接收字节率",
	},
	"Disk_capacity_usage_of_Backends": [2]string{
		"Disk capacity usage of Backends",
		"磁盘容量使用",
	},
	"Number_of_tablets_of_each_Backends": [2]string{
		"Number of tablets of each Backends",
		"每个后端的表格数量",
	},
	"The_file_descriptor_usage_of_Backends_Left_Y_axes_shows_the_used_fd_num_Right_Y_axes_shows_the_soft_limit_open_file_number": [2]string{
		"The file descriptor usage of Backends. The used fd num. The soft limit open file number",
		"后端的文件描述符使用情况，使用的fd编号，软限制打开的文件编号",
	},
	"The_thread_number_of_Backends": [2]string{
		"The thread number of Backends",
		"后端的线程数",
	},
	"IO_util_of_Backends_High_means_IO_is_busy": [2]string{
		"IO util of Backends. High means IO is busy",
		"后端的 IO 带宽利用率，高表示IO繁忙",
	},
	"Base_compaction_rate_of_Backends_Normally_base_compaction_only_runs_between_20_to_4_and_it_is_configurable_Right_Y_axes_indicates_the_total_base_compaction_bytes": [2]string{
		"Base compaction rate of Backends. Normally base compaction only runs between 20:00 to 4:00 and it is configurable. The total base compaction bytes",
		"后端的基本压缩率，通常基本压缩仅在20:00到4:00之间运行，并且是可配置的，总的基本压缩字节",
	},
	"Cumulative_compaction_rate_of_Backends_The_total_cumulative_compaction_bytes": [2]string{
		"Cumulative compaction rate of Backends. The total cumulative compaction bytes",
		"后端的累积压缩率，总的累积压缩字节数",
	},
	"Loading_rate_of_Backends_This_indicates_the_rate_of_file_downloading_in_LOADING_state_of_load_job_Right_Y_axes_indicates_the_total_rate_of_file_downloading": [2]string{
		"Loading rate of Backends. This indicates the rate of file downloading in LOADING state of load job. The total rate of file downloading",
		"后端加载速率，这表示加载作业加载状态下的文件下载速率，文件下载的总速率",
	},
	"Loading_rows_rate_of_Backends_This_indicates_the_rate_of_rows_loaded_in_LOADING_state_of_load_job_Right_Y_axes_shows_the_total_push_rate_of_cluster": [2]string{
		"Loading rows rate of Backends. This indicates the rate of rows loaded in LOADING state of load job. The total push rate of cluster",
		"后端的加载行速率，这表示在加载作业的加载状态下加载的行速率，集群的总推送速率",
	},
	"Scan_rate_of_Backends_This_indicates_the_read_rate_when_processing_queries": [2]string{
		"Scan rate of Backends. This indicates the read rate when processing queries",
		"后端扫描速率，这表示处理查询时的读取速率",
	},
	"Scan_rows_rate_of_Backends_This_indicates_the_read_rows_rate_when_processing_queries": [2]string{
		"Scan rows rate of Backends. This indicates the read rows rate when processing queries",
		"后端的扫描行速率，这表示处理查询时的读取行速率",
	},

	"Tablet_Meta_Write": [2]string{
		"The write rate and duration of each write operation of meta requests",
		"元请求每次写操作的写速率和持续时间",
	},
	"Tablet_Meta_Read": [2]string{
		"The read rate and duration of each read operation of meta requests",
		"元请求每次读操作的读速率和持续时间",
	},
	// BE tasks
	"Tablets_Report": [2]string{
		"The engine requests of all tablet report",
		"所有表单的引擎请求数",
	},
	"Single_Tablet_Report": [2]string{
		"The engine requests of single tablet report",
		"单一报告表单的引擎请求数",
	},
	"Finish_task_report": [2]string{
		"The engine requests of finish task",
		"完成任务的引擎请求数",
	},
	"Push_Task": [2]string{
		"Push task requests",
		"推送任务请求数",
	},
	"The_average_cost_time_of_push_tasks_on_each_Backend": [2]string{
		"The average cost time of push tasks on each Backend",
		"每个后端上推送任务的平均时间",
	},
	"Delete": [2]string{
		"The engine requests of delete",
		"删除操作的引擎请求数",
	},
	"Base_Compaction": [2]string{
		"The engine requests of base compaction",
		"基本压缩操作的引擎请求数",
	},
	"Cumulative_Compaction": [2]string{
		"The engine requests of cumulative compaction",
		"累计压缩操作的引擎请求数",
	},
	"Clone": [2]string{
		"The engine requests of clone",
		"克隆操作的引擎请求数",
	},
	"Create_rollup": [2]string{
		"The engine requests of create rollup",
		"创建汇总的引擎请求数",
	},
	"Schema_change": [2]string{
		"The engine requests of schema change",
		"架构更改的引擎请求数",
	},
	"Create_tablet": [2]string{
		"The engine requests of create tablet",
		"创建表单的引擎请求数",
	},
}
